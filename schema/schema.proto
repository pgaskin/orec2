syntax = "proto3";

package orec2;

import "google/protobuf/timestamp.proto";

// underscored fields are ones which contain data parsed or otherwise enriched
// by the scraper rather than coming directly from the source page, and are set
// on a best-effort basis (if an error occurs, it is ignored) erring on the side
// of safety

// non-underscored fields have minimal processing done to them

message Data {
    repeated Facility facilities = 1;
    repeated string attribution = 2;
}

message Facility {
    string name = 1;
    string description = 2 [json_name="desc"];
    Source source = 3;
    string address = 4;
    optional LngLat _lnglat = 5 [json_name="_lnglat"];
    string notifications_html = 6; // raw html
    string special_hours_html = 7; // raw html
    repeated ScheduleGroup schedule_groups = 8;
    repeated string _errors = 9 [json_name="_errors"]; // scrape errors
}

message Source {
    string url = 1;
    optional google.protobuf.Timestamp _date = 2 [json_name="_date"]; // unix epoch seconds
}

message LngLat {
    float lng = 1;
    float lat = 2;
}

message ScheduleGroup {
    string label = 1;
    string _title = 2 [json_name="_title"]; // for display and filtering, parsed out from the label and normalized, title case
    string schedule_changes_html = 3; // raw html
    repeated Schedule schedules = 4;
}

message Schedule {
    message ActivityDay {
        repeated TimeRange times = 1;
    };
    message Activity {
        string label = 1;
        string _name = 2 [json_name="_name"]; // for filtering, cleaned up and normalized, lowercase
        repeated ActivityDay days = 3; // corresponds to days
    }
    string caption = 1;
    string _name = 2 [json_name="_name"]; // for filtering, parsed out from the caption and normalized (i.e., without facility name or date range), lowercase
    repeated string days = 3; // free-form, but usually the day of the week
    repeated Activity activities = 4;
}

message TimeRange {
    string label = 1;
    optional int32 _start = 2 [json_name="_start"];  // minutes from 00:00, not set if parse error
    optional int32 _end = 3 [json_name="_end"]; // minutes from 00:00, not set if parse error
    optional Weekday _wkday = 4 [json_name="_wkday"];// sunday = 0, not set if parse error
}

enum Weekday {
    SUNDAY = 0;
    MONDAY = 1;
    TUESDAY = 2;
    WEDNESDAY = 3;
    THURSDAY = 4;
    FRIDAY = 5;
    SATURDAY = 6;
}
